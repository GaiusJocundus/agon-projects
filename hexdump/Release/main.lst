Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED23-Jul-25     22:47:01     page:   1


PC     Object              I  Line    Source 
                           A     1    ; HEXDUMP utility
                           A     2    ;
                           A     3    ;
                           A     4    ; Written Agon native by Shawn Sijnstra
                           A     5    ;
                           A     6    ; Notable changes for reference:
                           A     7    ; required colons on all labels
                           A     8    ; labels are case sensitive
                           A     9    ; code is a reserved word and can't be used as 
                           A    10    ; numeric evaluations are done differently - ch
                           A    11    ; reserved word INCLUDE needs to be in upper ca
                           A    12    ; assembly source MUST be .asm, can't use e.g. 
                           A    13    ; supports defb as a synonym for db, but NOT de
                           A    14    ; labels can't start with @
                           A    15    ;
                           A    16    ; DESIGN OF WIDTH:
                           A    17    ; 6 chars for current byte
                           A    18    ; dddddd: XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX |
                           A    19    ; dddddd:XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX|..
                           A    20    
                           A    21    
                           A    22    			.ASSUME	ADL = 0				
                           A    23    
                           B     0    			INCLUDE	"equs.inc"
                           B     1    ;
                           B     2    ; Title:	Memory Dump - Equs
                           B     3    ; Author:	Dean Belfield
                           B     4    ; Created:	15/11/2022
                           B     5    ; Last Updated:	15/11/2022
                           B     6    ;
                           B     7    ; Modinfo:
                           B     8    				
       0000FF00            B     9    RAM_Top:		EQU		0FF00h
       00000000            B    10    Stack_Top:		EQU		00000h	; Stack at top
                           B    11    	
                           B    12    ; For GPIO
                           B    13    ; PA not available on eZ80L92
                           B    14    ;
       00000096            B    15    PA_DR:			EQU		96h
       00000097            B    16    PA_DDR:			EQU		97h
       00000098            B    17    PA_ALT1:		EQU		98h
       00000099            B    18    PA_ALT2:		EQU		99h
       0000009A            B    19    PB_DR:          	EQU		9Ah
       0000009B            B    20    PB_DDR:        	 	EQU		9Bh
       0000009C            B    21    PB_ALT1:        	EQU		9Ch
       0000009D            B    22    PB_ALT2:        	EQU		9Dh
       0000009E            B    23    PC_DR:          	EQU		9Eh
       0000009F            B    24    PC_DDR:         	EQU		9Fh
       000000A0            B    25    PC_ALT1:        	EQU		A0h
       000000A1            B    26    PC_ALT2:        	EQU		A1h
       000000A2            B    27    PD_DR:          	EQU		A2h
       000000A3            B    28    PD_DDR:			EQU		A3h
       000000A4            B    29    PD_ALT1:		EQU		A4h
       000000A5            B    30    PD_ALT2:		EQU		A5h
                           B    31    	
       00000000            B    32    GPIOMODE_OUT:		EQU		0	; Output
       00000001            B    33    GPIOMODE_IN:		EQU		1	; Input
       00000002            B    34    GPIOMODE_DIO:		EQU		2	; Open Drain IO
       00000003            B    35    GPIOMODE_SIO:		EQU		3	; Open Source I
       00000004            B    36    GPIOMODE_INTD:		EQU		4	; Interrupt, Du
       00000005            B    37    GPIOMODE_ALTF:		EQU		5;	; Alt Function
       00000006            B    38    GPIOMODE_INTAL:		EQU		6	; Interrupt, Ac
       00000007            B    39    GPIOMODE_INTAH:		EQU		7	; Interrupt, Ac
       00000008            B    40    GPIOMODE_INTFE:		EQU		8	; Interrupt, Fa
       00000009            B    41    GPIOMODE_INTRE:		EQU		9	; Interrupt, Ri
                           B    42    	
                           B    43    ; For serial.asm
                           B    44    ; 
       016E3600            B    45    BASE_CLOCK		EQU	24000000	; It's actually
                           B    46    
       00000003            B    47    BAUD_500000		EQU	BASE_CLOCK / (16 * 500000)
       00000006            B    48    BAUD_250000		EQU	BASE_CLOCK / (16 * 250000)
       0000000C            B    49    BAUD_125000		EQU	BASE_CLOCK / (16 * 125000)
       0000004E            B    50    BAUD_19200		EQU	BASE_CLOCK / (16 * 19200)	
                           B    51    
                           B    52    ; For interrupts.asm
                           B    53    ;
                           B    54    
                           B    55    ;UARTs
                           B    56    ;
       00000018            B    57    UART0_IVECT		EQU		18h
       0000001A            B    58    UART1_IVECT		EQU		1Ah
                           B    59    
                           B    60    ;Ports
                           B    61    ;
       00000030            B    62    PB0_IVECT   		EQU   	30h	; AGON ITRP Int
       00000032            B    63    PB1_IVECT  	  	EQU  	32h	; AGON VBLANK Inter
       00000034            B    64    PB2_IVECT  	  	EQU   	34h
       00000036            B    65    PB3_IVECT  	  	EQU   	36h
       00000038            B    66    PB4_IVECT    		EQU   	38h
       0000003A            B    67    PB5_IVECT    		EQU   	3Ah
       0000003C            B    68    PB6_IVECT    		EQU   	3Ch
       0000003E            B    69    PB7_IVECT    		EQU   	3Eh
                           B    70                           
       00000040            B    71    PC0_IVECT    		EQU   	40h
       00000042            B    72    PC1_IVECT    		EQU   	42h
       00000044            B    73    PC2_IVECT    		EQU   	44h
       00000046            B    74    PC3_IVECT    		EQU   	46h
       00000048            B    75    PC4_IVECT    		EQU   	48h
       0000004A            B    76    PC5_IVECT    		EQU   	4Ah
       0000004C            B    77    PC6_IVECT    		EQU   	4Ch
       0000004E            B    78    PC7_IVECT    		EQU   	4Eh
                           B    79                           
       00000050            B    80    PD0_IVECT    		EQU   	50h
       00000052            B    81    PD1_IVECT    		EQU   	52h
       00000054            B    82    PD2_IVECT    		EQU   	54h
       00000056            B    83    PD3_IVECT    		EQU   	56h
       00000058            B    84    PD4_IVECT    		EQU   	58h
       0000005A            B    85    PD5_IVECT    		EQU   	5Ah
       0000005C            B    86    PD6_IVECT    		EQU   	5Ch
       0000005E            B    87    PD7_IVECT    		EQU   	5Eh
                           B    88    
                           B    89    ; Originally in main.asm
                           B    90    ;
       0000000D            B    91    CR:			EQU     0DH
       0000000A            B    92    LF:			EQU     0AH
       0000001B            B    93    ESC:			EQU     1BH
                           B     0    			INCLUDE "mos_api.inc"	; In MOS/sr
                           B     1    ;
                           B     2    ; Title:	AGON MOS - API for user projects
                           B     3    ; Author:	Dean Belfield
                           B     4    ; Created:	03/08/2022
                           B     5    ; Last Updated:	15/04/2023
                           B     6    ;
                           B     7    ; Modinfo:
                           B     8    ; 05/08/2022:	Added mos_feof
                           B     9    ; 09/08/2022:	Added system variables: cursorX
                           B    10    ; 18/08/2022:	Added system variables: scrchar
                           B    11    ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
                           B    12    ; 24/09/2022:	Added mos_getError, mos_mkdir
                           B    13    ; 13/10/2022:	Added mos_oscli
                           B    14    ; 23/02/2023:	Added more sysvars, fixed typo 
                           B    15    ; 04/03/2023:	Added sysvar_scrpixelIndex
                           B    16    ; 08/03/2023:	Renamed sysvar_keycode to sysva
                           B    17    ; 15/03/2023:	Added mos_copy, mos_getrtc, mos
                           B    18    ; 21/03/2023:	Added mos_setintvector, sysvars
                           B    19    ; 22/03/2023:	The VDP commands are now indexe
                           B    20    ; 29/03/2023:	Added mos_uopen, mos_uclose, mo
                           B    21    ; 13/04/2023:	Added FatFS file structures (FF
                           B    22    ; 15/04/2023:	Added mos_getfil, mos_fread, mo
                           B    23    
                           B    24    ; VDP control (VDU 23, 0, n)
                           B    25    ;
       00000080            B    26    vdp_gp:			EQU 	80h
       00000081            B    27    vdp_keycode:		EQU 	81h
       00000082            B    28    vdp_cursor:		EQU	82h
       00000083            B    29    vdp_scrchar:		EQU	83h
       00000084            B    30    vdp_scrpixel:		EQU	84h
       00000085            B    31    vdp_audio:		EQU	85h
       00000086            B    32    vdp_mode:		EQU	86h
       00000087            B    33    vdp_rtc:		EQU	87h
       00000088            B    34    vdp_keystate:		EQU	88h
       000000C0            B    35    vdp_logicalcoords:	EQU	C0h
       000000FF            B    36    vdp_terminalmode:	EQU	FFh
                           B    37    
                           B    38    ; MOS high level functions
                           B    39    ;
       00000000            B    40    mos_getkey:		EQU	00h
       00000001            B    41    mos_load:		EQU	01h
       00000002            B    42    mos_save:		EQU	02h
       00000003            B    43    mos_cd:			EQU	03h
       00000004            B    44    mos_dir:		EQU	04h
       00000005            B    45    mos_del:		EQU	05h
       00000006            B    46    mos_ren:		EQU	06h
       00000007            B    47    mos_mkdir:		EQU	07h
       00000008            B    48    mos_sysvars:		EQU	08h
       00000009            B    49    mos_editline:		EQU	09h
       0000000A            B    50    mos_fopen:		EQU	0Ah
       0000000B            B    51    mos_fclose:		EQU	0Bh
       0000000C            B    52    mos_fgetc:		EQU	0Ch
       0000000D            B    53    mos_fputc:		EQU	0Dh
       0000000E            B    54    mos_feof:		EQU	0Eh
       0000000F            B    55    mos_getError:		EQU	0Fh
       00000010            B    56    mos_oscli:		EQU	10h
       00000011            B    57    mos_copy:		EQU	11h
       00000012            B    58    mos_getrtc:		EQU	12h
       00000013            B    59    mos_setrtc:		EQU	13h
       00000014            B    60    mos_setintvector:	EQU	14h
       00000015            B    61    mos_uopen:		EQU	15h
       00000016            B    62    mos_uclose:		EQU	16h
       00000017            B    63    mos_ugetc:		EQU	17h
       00000018            B    64    mos_uputc:		EQU 	18h
       00000019            B    65    mos_getfil:		EQU	19h
       0000001A            B    66    mos_fread:		EQU	1Ah
       0000001B            B    67    mos_fwrite:		EQU	1Bh
       0000001C            B    68    mos_flseek:		EQU	1Ch
                           B    69    
                           B    70    ; FatFS file access functions
                           B    71    ;
       00000080            B    72    ffs_fopen:		EQU	80h
       00000081            B    73    ffs_fclose:		EQU	81h
       00000082            B    74    ffs_fread:		EQU	82h
       00000083            B    75    ffs_fwrite:		EQU	83h
       00000084            B    76    ffs_flseek:		EQU	84h
       00000085            B    77    ffs_ftruncate:		EQU	85h
       00000086            B    78    ffs_fsync:		EQU	86h
       00000087            B    79    ffs_fforward:		EQU	87h
       00000088            B    80    ffs_fexpand:		EQU	88h
       00000089            B    81    ffs_fgets:		EQU	89h
       0000008A            B    82    ffs_fputc:		EQU	8Ah
       0000008B            B    83    ffs_fputs:		EQU	8Bh
       0000008C            B    84    ffs_fprintf:		EQU	8Ch
       0000008D            B    85    ffs_ftell:		EQU	8Dh
       0000008E            B    86    ffs_feof:		EQU	8Eh
       0000008F            B    87    ffs_fsize:		EQU	8Fh
       00000090            B    88    ffs_ferror:		EQU	90h
                           B    89    
                           B    90    ; FatFS directory access functions
                           B    91    ;
       00000091            B    92    ffs_dopen:		EQU	91h
       00000092            B    93    ffs_dclose:		EQU	92h
       00000093            B    94    ffs_dread:		EQU	93h
       00000094            B    95    ffs_dfindfirst:		EQU	94h
       00000095            B    96    ffs_dfindnext:		EQU	95h
                           B    97    
                           B    98    ; FatFS file and directory management functions
                           B    99    ;
       00000096            B   100    ffs_stat:		EQU	96h
       00000097            B   101    ffs_unlink:		EQU	97h
       00000098            B   102    ffs_rename:		EQU	98h
       00000099            B   103    ffs_chmod:		EQU	99h
       0000009A            B   104    ffs_utime:		EQU	9Ah
       0000009B            B   105    ffs_mkdir:		EQU	9Bh
       0000009C            B   106    ffs_chdir:		EQU	9Ch
       0000009D            B   107    ffs_chdrive:		EQU	9Dh
       0000009E            B   108    ffs_getcwd:		EQU	9Eh
                           B   109    
                           B   110    ; FatFS volume management and system configurat
                           B   111    ;
       0000009F            B   112    ffs_mount:		EQU	9Fh
       000000A0            B   113    ffs_mkfs:		EQU	A0h
       000000A1            B   114    ffs_fdisk		EQU	A1h
       000000A2            B   115    ffs_getfree:		EQU	A2h
       000000A3            B   116    ffs_getlabel:		EQU	A3h
       000000A4            B   117    ffs_setlabel:		EQU	A4h
       000000A5            B   118    ffs_setcp:		EQU	A5h
                           B   119    	
                           B   120    ; File access modes
                           B   121    ;
       00000001            B   122    fa_read:		EQU	01h
       00000002            B   123    fa_write:		EQU	02h
       00000000            B   124    fa_open_existing:	EQU	00h
       00000004            B   125    fa_create_new:		EQU	04h
       00000008            B   126    fa_create_always:	EQU	08h
       00000010            B   127    fa_open_always:		EQU	10h
       00000030            B   128    fa_open_append:		EQU	30h
                           B   129    	
                           B   130    ; System variable indexes for api_sysvars
                           B   131    ; Index into _sysvars in globals.asm
                           B   132    ;
       00000000            B   133    sysvar_time:		EQU	00h	; 4: Clock timer in
       00000004            B   134    sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indic
       00000005            B   135    sysvar_keyascii:	EQU	05h	; 1: ASCII keycode,
       00000006            B   136    sysvar_keymods:		EQU	06h	; 1: Keycode modifi
       00000007            B   137    sysvar_cursorX:		EQU	07h	; 1: Cursor X posit
       00000008            B   138    sysvar_cursorY:		EQU	08h	; 1: Cursor Y posit
       00000009            B   139    sysvar_scrchar:		EQU	09h	; 1: Character read
       0000000A            B   140    sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data rea
       0000000D            B   141    sysvar_audioChannel:	EQU	0Dh	; 1: Audio chan
       0000000E            B   142    sysvar_audioSuccess:	EQU	0Eh	; 1: Audio chan
       0000000F            B   143    sysvar_scrWidth:	EQU	0Fh	; 2: Screen width i
       00000011            B   144    sysvar_scrHeight:	EQU	11h	; 2: Screen height 
       00000013            B   145    sysvar_scrCols:		EQU	13h	; 1: Screen columns
       00000014            B   146    sysvar_scrRows:		EQU	14h	; 1: Screen rows in
       00000015            B   147    sysvar_scrColours:	EQU	15h	; 1: Number of colo
       00000016            B   148    sysvar_scrpixelIndex:	EQU	16h	; 1: Index of p
       00000017            B   149    sysvar_vkeycode:	EQU	17h	; 1: Virtual key co
       00000018            B   150    sysvar_vkeydown		EQU	18h	; 1: Virtual key st
       00000019            B   151    sysvar_vkeycount:	EQU	19h	; 1: Incremented ev
       0000001A            B   152    sysvar_rtc:		EQU	1Ah	; 8: Real time clock da
       00000022            B   153    sysvar_keydelay:	EQU	22h	; 2: Keyboard repea
       00000024            B   154    sysvar_keyrate:		EQU	24h	; 2: Keyboard repea
       00000026            B   155    sysvar_keyled:		EQU	26h	; 1: Keyboard LED s
                           B   156    	
                           B   157    ; Flags for the VPD protocol
                           B   158    ;
       00000001            B   159    vdp_pflag_cursor:	EQU	00000001b
       00000002            B   160    vdp_pflag_scrchar:	EQU	00000010b
       00000004            B   161    vdp_pflag_point:	EQU	00000100b
       00000008            B   162    vdp_pflag_audio:	EQU	00001000b
       00000010            B   163    vdp_pflag_mode:		EQU	00010000b
       00000020            B   164    vdp_pflag_rtc:		EQU	00100000b
                           B   165    
                           B   166    ;
                           B   167    ; FatFS structures
                           B   168    ; These mirror the structures contained in src_
                           B   169    ;
                           B   170    ; Object ID and allocation information (FFOBJID
                           B   171    ;
                           B   172    FFOBJID	.STRUCT
000000                     B   173    	fs:		DS	3	; Pointer to the hosting vo
000003                     B   174    	id:		DS	2	; Hosting volume mount ID
000005                     B   175    	attr:		DS	1	; Object attribute
000006                     B   176    	stat:		DS	1	; Object chain status (
000007                     B   177    	sclust:		DS	4	; Object data start clu
00000B                     B   178    	objsize:	DS	4	; Object size (valid wh
       0000000F            B   179    FFOBJID_SIZE .ENDSTRUCT FFOBJID
                           B   180    ;
                           B   181    ; File object structure (FIL)
                           B   182    ;
                           B   183    FIL .STRUCT
000000                     B   184    	obj:		.TAG	FFOBJID	; Object identi
00000F                     B   185    	flag:		DS	1	; File status flags
000010                     B   186    	err:		DS	1	; Abort flag (error cod
000011                     B   187    	fptr:		DS	4	; File read/write point
000015                     B   188    	clust:		DS	4	; Current cluster of fp
000019                     B   189    	sect:		DS	4	; Sector number appeari
00001D                     B   190    	dir_sect:	DS	4	; Sector number contain
000021                     B   191    	dir_ptr:	DS	3	; Pointer to the direct
       00000024            B   192    FIL_SIZE .ENDSTRUCT FIL
                           B   193    ;
                           B   194    ; Directory object structure (DIR)
                           B   195    ; 
                           B   196    DIR .STRUCT
000000                     B   197    	obj:		.TAG	FFOBJID	; Object identi
00000F                     B   198    	dptr:		DS	4	; Current read/write of
000013                     B   199    	clust:		DS	4	; Current cluster
000017                     B   200    	sect:		DS	4	; Current sector (0:Rea
00001B                     B   201    	dir:		DS	3	; Pointer to the direct
00001E                     B   202    	fn:		DS	12	; SFN (in/out) {body[8],ext
00002A                     B   203    	blk_ofs:	DS	4	; Offset of current ent
       0000002E            B   204    DIR_SIZE .ENDSTRUCT DIR
                           B   205    ;
                           B   206    ; File information structure (FILINFO)
                           B   207    ;
                           B   208    FILINFO .STRUCT
000000                     B   209    	fsize:		DS 	4	; File size
000004                     B   210    	fdate:		DS	2	; Modified date
000006                     B   211    	ftime:		DS	2	; Modified time
000008                     B   212    	fattrib:	DS	1	; File attribute
000009                     B   213    	altname:	DS	13	; Alternative file name
000016                     B   214    	fname:		DS	256	; Primary file name
       00000116            B   215    FILINFO_SIZE .ENDSTRUCT FILINFO
                           B   216    
                           B   217    ;
                           B   218    ; Macro for calling the API
                           B   219    ; Parameters:
                           B   220    ; - function: One of the function numbers liste
                           B   221    ;
                           B   222    MOSCALL:		MACRO	function
                           B   223    			LD	A, function
                           B   224    			RST.LIS	08h
                           B   225    			ENDMACRO 	
                           B   226    ;
                           A    26    
                           A    27    			SEGMENT CODE
                           A    28    	
                           A    29    			XDEF	_main
                           A    30    			XREF	Print_Hex24
                           A    31    			XREF	Print_Hex16
                           A    32    			XREF	Print_Hex8
                           A    33    			
                           A    34    ; Error: Invalid parameter
                           A    35    ;
000145 211300              A    36    _err_invalid_param:	LD		HL, 19			; T
000148 C9                  A    37    			RET
                           A    38    
                           A    39    
                           A    40    ; ASCII
                           A    41    ;
       00000003            A    42    CtrlC:	equ	03h
                           A    43    CR:	equ	0Dh
                           A    44    LF:	equ	0Ah
       0000001A            A    45    CtrlZ:	equ	1Ah
                           A    46    ;
       000B0000            A    47    BASE:	equ	0b0000h
                           A    48    
000149                     A    49    _main:
000149 79                  A    50    	ld	a,c	;AGON - number of parameters
00014A 3D                  A    51    	dec	a
00014B CA 8D 02            A    52    	jp	z,okusage
00014E FE03                A    53    	cp	3	;too many parameters
000150 D2 93 02            A    54    	jp	nc,badusage
                           A    55    
000153 5BDD2703            A    56    	LD.LIL		HL,(IX+3)		; HLU: pointer 
000157 5B7E                A    57    	ld.LIL	a,(HL)
000159 FE2D                A    58    	cp	'-'
00015B C2 7A 03            A    59    	jp	nz,interactive
00015E 5B23                A    60    	INC.LIL	HL
000160 5B7E                A    61    	LD.LIL	a,(HL)				;24 bit
000162 FE63                A    62    	cp	'c'
000164 C2 93 02            A    63    	jp	nz,badusage
                           A    64    ;	jp	interactive
000167 5BDD2706            A    65    	LD.LIL		HL,(IX+6)		; HLU: pointer 
00016B                     A    66    openit:
00016B 0E01                A    67    	ld	c,fa_read	;open read-only for straigh
                           A    68    	MOSCALL	mos_fopen
000171 B7                  A    69    	or	a
000172 20 0E               A    70    	jr	nz,open_ok
000174 210400              A    71    	ld	hl,4	;file not found/could not find 
000177 C9                  A    72    	ret			;exit
                           A    73    ;
                           A    74    ;
                           A    75    ; Close and exit routines
                           A    76    ;
                           A    77    
000178                     A    78    close:
                           A    79    ;C: Filehandle, or 0 to close all open files
                           A    80    ;returns number of still open files - how about
                           A    81    
000178 0E00                A    82    	ld	c,0
                           A    83    	MOSCALL	mos_fclose	
                           A    84    
00017E                     A    85    exit:
00017E 210000              A    86    	ld	hl,0	;for Agon - successful exit
000181 C9                  A    87    	ret
                           A    88    ;
                           A    89    ;
000182                     A    90    open_ok:
                           A    91    
000182 32 B1 06            A    92    	ld	(in_handle),a	;store the file handle 
                           A    93    	MOSCALL	mos_sysvars	;get the sysvars locati
000189 DD7E19              A    94    	ld	a,(IX+sysvar_vkeycount)	;fetch keycount
00018C 32 C5 08            A    95    	ld	(keycount),a	;store to compare again
00018F 5B21F0FF FF         A    96    	ld.lil	hl,0-16
000194 5B22 B2 06 0B       A    97    	ld.lil	(counter+BASE),hl
                           A    98    
000199                     A    99    printlp:
                           A   100    
                           A   101    
000199 5B21 C4 06 0B       A   102    	ld.lil	hl,buffer+BASE
00019E 5B111000 00         A   103    	ld.lil	de,16
0001A3 3A B1 06            A   104    	ld	a,(in_handle)
0001A6 4F                  A   105    	ld	c,a
                           A   106    	MOSCALL	mos_fread
0001AB 7B                  A   107    	ld		a,e
0001AC B7                  A   108    	or		a
0001AD CA 2E 02            A   109    	jp		z,donefile
0001B0 47                  A   110    	ld		b,a	;b will track length for next l
0001B1 5B2A B2 06 0B       A   111    	ld.lil	hl,(counter+BASE)
0001B6 5B111000 00         A   112    	ld.lil	de,16
0001BB 5B19                A   113    	add.lil	hl,de
0001BD 5B22 B2 06 0B       A   114    	ld.lil	(counter+BASE),hl
0001C2 C5                  A   115    	push	bc
0001C3 CD 89 06            A   116    	call	Print_Hex24
0001C6 C1                  A   117    	pop		bc
0001C7                     A   118    hexloop:
0001C7 3E3A                A   119    	ld		a,':'
0001C9 D7                  A   120    	rst		10h
0001CA 21 C4 06            A   121    	ld		hl,buffer
0001CD 0E00                A   122    	ld		c,0
0001CF                     A   123    hexlp1:
0001CF 79                  A   124    	ld		a,c
0001D0 E603                A   125    	and		3
0001D2 20 07               A   126    	jr		nz,$f
0001D4 3E20                A   127    	ld		a,' '
0001D6 E5                  A   128    	push	hl
0001D7 C5                  A   129    	push	bc
0001D8 D7                  A   130    	rst		10h
0001D9 C1                  A   131    	pop		bc
0001DA E1                  A   132    	pop		hl
0001DB                     A   133    $$:
0001DB 7E                  A   134    	ld		a,(hl)
                           A   135    
0001DC E5                  A   136    	push	hl
0001DD C5                  A   137    	push	bc
0001DE CD 9E 06            A   138    	call	Print_Hex8
0001E1 C1                  A   139    	pop		bc
0001E2 E1                  A   140    	pop		hl
0001E3 23                  A   141    	inc		hl
0001E4                     A   142    hexlp2:
0001E4 0C                  A   143    	inc		c
0001E5 79                  A   144    	ld		a,c
0001E6 FE10                A   145    	cp		16
0001E8 CA FC 01            A   146    	jp		z,hexend
0001EB B8                  A   147    	cp		b
0001EC 38 E1               A   148    	jr		c,hexlp1
0001EE 3E20                A   149    	ld		a,' '
0001F0 D7                  A   150    	rst		10h
0001F1 D7                  A   151    	rst		10h
0001F2 79                  A   152    	ld		a,c
0001F3 E603                A   153    	and		3
0001F5 20 03               A   154    	jr		nz,$f
0001F7 3E20                A   155    	ld		a,' '
0001F9 D7                  A   156    	rst		10h
0001FA                     A   157    $$:
0001FA 18 E8               A   158    	jr		hexlp2
                           A   159    
0001FC                     A   160    hexend:
0001FC 3E20                A   161    	ld		a,' '
0001FE D7                  A   162    	rst		10h
                           A   163    
0001FF                     A   164    asciiloop:
0001FF 3E7C                A   165    	ld		a,'|'
000201 D7                  A   166    	rst		10h
000202 21 C4 06            A   167    	ld		hl,buffer
000205 0E00                A   168    	ld		c,0
000207                     A   169    asciilp1:
000207 7E                  A   170    	ld		a,(hl)
                           A   171    ;	call	unprintable
000208                     A   172    asciilp2:
000208 E5                  A   173    	push	hl
000209 C5                  A   174    	push	bc
00020A F5                  A   175    	push	af
00020B 3E1B                A   176    	ld		a,27
00020D D7                  A   177    	rst		10h
00020E F1                  A   178    	pop		af
00020F D7                  A   179    	rst		10h
000210 C1                  A   180    	pop		bc
000211 E1                  A   181    	pop		hl
000212 23                  A   182    	inc		hl
000213 0C                  A   183    	inc		c
000214 79                  A   184    	ld		a,c
000215 FE10                A   185    	cp		16
000217 CA 21 02            A   186    	jp		z,asciiend
00021A B8                  A   187    	cp		b
00021B 38 EA               A   188    	jr		c,asciilp1
00021D 3E20                A   189    	ld		a,' '
00021F 18 E7               A   190    	jr		asciilp2
                           A   191    
000221                     A   192    asciiend:
000221 CD 58 02            A   193    	call	inline_print
000224 7C0D0A00            A   194    	db		'|',CR,LF,0	
000228 CD 6C 02            A   195    	call	ck_ctrlC	;check at the end of th
00022B C3 99 01            A   196    	jp		printlp
                           A   197    
                           A   198    
                           A   199    
00022E                     A   200    donefile:
00022E CD 58 02            A   201    	call	inline_print
000231 0D0A00              A   202    	db		CR,LF,0
000234 C3 78 01            A   203    	jp		close
                           A   204    
000237                     A   205    hit_EOF:
000237 CD 58 02            A   206    	call	inline_print
00023A 50617374 20656E64   A   207    	db		'Past end of file',CR,LF,0
000242 206F6620 66696C65 
00024A 0D0A00 
00024D C9                  A   208    	ret
                           A   209    
                           A   210    ; Entry:
                           A   211    ; A is a character to test
                           A   212    ; Exit:
                           A   213    ; unprintable character converted to a '.'
00024E                     A   214    unprintable:
00024E FE20                A   215    	cp	' '
000250 38 03               A   216    	jr	c,$f
000252 FE7F                A   217    	cp	127
000254 D8                  A   218    	ret	c	;always nz
000255 3E2E                A   219    $$:	ld	a,'.'	;xor	a	;sets 0 flag
000257 C9                  A   220    	ret
                           A   221    ;
                           A   222    ; Prints string directly after the call
                           A   223    ;
000258 E1                  A   224    inline_print:	pop	hl
000259 CD 5F 02            A   225    	call	print_string
00025C E9                  A   226    	jp	(hl)
                           A   227    ;
                           A   228    ; more efficient print string for strings > 1 c
00025D                     A   229    $$:
00025D D7                  A   230    	rst	10h	;Agon uses this to print the charac
00025E 23                  A   231    	inc	hl
00025F 7E                  A   232    print_string:	ld	a,(hl)
000260 B7                  A   233    	or	a
000261 20 FA               A   234    	jr	nz,$b
000263 C9                  A   235    	ret
                           A   236    ;
                           A   237    ;
000264                     A   238    $$:
000264 D7                  A   239    	rst	10h	;Agon uses this to print the charac
000265 23                  A   240    	inc	hl
000266 7E                  A   241    print_HL:	ld	a,(hl)
000267 FE20                A   242    	cp	32
000269 30 F9               A   243    	jr	nc,$b
00026B C9                  A   244    	ret
                           A   245    
                           A   246    
                           A   247    ; Check for ctrl-C. If so, clean stack and exit
                           A   248    ;
00026C                     A   249    ck_ctrlC:
                           A   250    ;	ld	a,1		; modified below by self modify
                           A   251    ;	dec	a
                           A   252    ;	and	7
                           A   253    ;	ld	(ck_ctrlC+1),a	; update LD A instructi
                           A   254    ;	ret	nz		; check every 8 calls only
                           A   255    	MOSCALL	mos_sysvars	;get the sysvars locati
000270 5BDD7E19            A   256    	ld.lil	a,(IX+sysvar_vkeycount)	;check if a
000274 21 C5 08            A   257    	ld	hl,keycount
000277 BE                  A   258    	cp	(hl)	;compare against keycount for c
000278 C8                  A   259    	ret	z
000279 77                  A   260    	ld	(hl),a	;update keycount
00027A 5BDD7E05            A   261    	ld.lil	a,(IX+sysvar_keyascii)	;fetch char
00027E FE1B                A   262    	cp	27	;accept an ESC as well
000280 28 07               A   263    	jr	z,$f
000282 FE71                A   264    	cp	'q'	;accept 'q' for consistency
000284 28 03               A   265    	jr	z,$f
000286 FE03                A   266    	cp	3	;is it ctr-C
000288 C0                  A   267    	ret	nz
000289                     A   268    $$:
000289 E1                  A   269    	pop	hl		;clean up stack
                           A   270    ;	pop	hl
00028A C3 78 01            A   271    	jp	close
                           A   272    
00028D CD 99 02            A   273    okusage:	call usage
000290 C3 7E 01            A   274    	jp	exit
                           A   275    
000293 CD 99 02            A   276    badusage:	call usage
000296 C3 45 01            A   277    	jp	_err_invalid_param
                           A   278    ;
                           A   279    ; usage -- show syntax
                           A   280    ; 
000299 CD 58 02            A   281    usage:	call	inline_print
00029C 0D0A6865 7864756D   A   282    	db	CR,LF,'hexdump utility for Agon by Shaw
0002A4 70207574 696C6974 
0002AC 7920666F 72204167 
0002B4 6F6E2062 79205368 
0002BC 61776E20 53696A6E 
0002C4 73747261 20286329 
0002CC 2032332D 4A756C2D 
0002D4 32303235 0D0A0D0A 
0002DC 55736167 653A0D0A   A   283    	db	'Usage:',CR,LF
0002E4 20202068 65786475   A   284    	db	'   hexdump [-c] <file>',CR,LF,CR,LF
0002EC 6D70205B 2D635D20 
0002F4 3C66696C 653E0D0A 
0002FC 0D0A 
0002FE 096F7074 696F6E61   A   285    	db	'	optional paramter c uses hexdump in
000306 6C207061 72616D74 
00030E 65722063 20757365 
000316 73206865 7864756D 
00031E 7020696E 20636F6E 
000326 74696E75 6F757320 
00032E 6D6F6465 2E0D0A 
000335 53746F72 65206865   A   286    	db 	'Store hexdump.bin in /mos directory. M
00033D 7864756D 702E6269 
000345 6E20696E 202F6D6F 
00034D 73206469 72656374 
000355 6F72792E 204D696E 
00035D 696D756D 204D4F53 
000365 20766572 73696F6E 
00036D 20322E33 2E302E0D 
000375 0A0D0A00 
000379 C9                  A   287    	ret
                           A   288    
                           A   289    ;
                           A   290    ;
                           A   291    ; Arrow key mapping
                           A   292    ; 8,11,10,21 = L,U,D,R
                           A   293    ;
                           A   294    ;
00037A                     A   295    interactive:
                           A   296    ;	LD.LIL		HL,(IX+6)		; HLU: pointer 
00037A 0E01                A   297    	ld	c,fa_read	;open read-only for straigh
                           A   298    	MOSCALL	mos_fopen
000380 B7                  A   299    	or	a
000381 20 04               A   300    	jr	nz,iopen_ok
000383 210400              A   301    	ld	hl,4	;file not found/could not find 
000386 C9                  A   302    	ret			;exit	
000387                     A   303    iopen_ok:
000387 32 B1 06            A   304    	ld		(in_handle),a
00038A 5B210000 00         A   305    	ld.lil	hl,0
00038F 5B22 B2 06 0B       A   306    	ld.lil	(counter+BASE),hl
000394                     A   307    main_loop:
000394 CD 58 02            A   308    	call	inline_print
000397 0C110A68 65786475   A   309    	db		12,17,10,'hexdump utility - interac
00039F 6D702075 74696C69 
0003A7 7479202D 20696E74 
0003AF 65726163 74697665 
0003B7 206D6F64 65110F0D 
0003BF 0A 
0003C0 46696C65 6E616D65   A   310    	db		'Filename:',0
0003C8 3A00 
0003CA 5BDD2703            A   311    	LD.LIL		HL,(IX+3)
0003CE CD 66 02            A   312    	call	print_HL
0003D1 CD 58 02            A   313    	call	inline_print
0003D4 0D0A0D0A 55736167   A   314    	db		CR,LF,CR,LF,'Usage instructions:',C
0003DC 6520696E 73747275 
0003E4 6374696F 6E733A0D 
0003EC 0A 
0003ED 70202D20 70726576   A   315    	db		'p - previous 100h bytes  - - previ
0003F5 696F7573 20313030 
0003FD 68206279 74657320 
000405 202D202D 20707265 
00040D 76696F75 73206279 
000415 74650D0A 
000419 6E202D20 6E657874   A   316    	db		'n - next 100h bytes      + - next 
000421 20313030 68206279 
000429 74657320 20202020 
000431 202B202D 206E6578 
000439 74206279 74650D0A 
000441 67202D20 676F2074   A   317    	db		'g - go to hex location   arrows - 
000449 6F206865 78206C6F 
000451 63617469 6F6E2020 
000459 20617272 6F777320 
000461 2D206E61 76696761 
000469 74650D0A 
00046D 71202D20 71756974   A   318    	db		'q - quit',CR,LF,CR,LF,CR,LF,0
000475 0D0A0D0A 0D0A00 
00047C 5B210000 00         A   319    	ld.lil	hl,0	
000481 CD D0 04            A   320    	call	sectorlp
000484 5B210001 00         A   321    	ld.lil	hl,256
000489 CD D0 04            A   322    	call	sectorlp
00048C                     A   323    key_invalid:
00048C 3E1F                A   324    	ld		a,31
00048E D7                  A   325    	rst		10h
00048F 3E00                A   326    	ld		a,0
000491 D7                  A   327    	rst		10h
000492 3E2B                A   328    	ld		a,43
000494 D7                  A   329    	rst		10h
                           A   330    	MOSCALL	mos_getkey
000499 21 B2 04            A   331    	LD		HL,key_options
00049C 01 0A 00            A   332    	LD		BC,key_table-key_options
00049F EDB1                A   333    	CPIR
0004A1 20 E9               A   334    	jr		nz,key_invalid
0004A3 79                  A   335    	ld		a,c
0004A4 87                  A   336    	add		a,a
0004A5 010000              A   337    	ld		bc,0
0004A8 4F                  A   338    	ld		c,a
0004A9 21 BC 04            A   339    	ld		hl,key_table
0004AC 09                  A   340    	add		hl,bc
0004AD 7E                  A   341    	ld		a,(hl)
0004AE 23                  A   342    	inc		hl
0004AF 66                  A   343    	ld		h,(hl)
0004B0 6F                  A   344    	ld		l,a
0004B1 E9                  A   345    	jp		(hl)
                           A   346    
                           A   347    ;table below has keys and jumps for each keypre
0004B2                     A   348    key_options:
0004B2 6E702B2D 080B0A15   A   349    	db		'np+-',8,11,10,21,'gq'
0004BA 6771 
0004BC                     A   350    key_table:
0004BC 7E01 F305 9005      A   351    	dw		exit,goto,next_byte,go_down,go_up,p
0004C2 8205 E705 CE05 
0004C8 CE05 9005 B705 
0004CE 9B05 
                           A   352    
                           A   353    
0004D0                     A   354    sectorlp:
                           A   355    
                           A   356    ;	ld.lil	(counter+BASE),hl
0004D0 5B22 B6 06 0B       A   357    	ld.lil	(rows+BASE),hl
0004D5 5B11 C4 06 0B       A   358    	ld.lil	de,buffer+BASE
0004DA 5B19                A   359    	add.lil	hl,de
0004DC 5B110001 00         A   360    	ld.lil	de,256
0004E1 3A B1 06            A   361    	ld	a,(in_handle)
0004E4 4F                  A   362    	ld	c,a
                           A   363    	MOSCALL	mos_fread
0004E9 7B                  A   364    	ld		a,e
0004EA B2                  A   365    	or		d
0004EB CA 37 02            A   366    	jp		z,hit_EOF		;zero length (DE=0)
0004EE 43                  A   367    	ld		b,e	;b will track length for next l
0004EF 0E00                A   368    	ld		c,0	;c will track current value in 
                           A   369    
0004F1                     A   370    seclp2:
                           A   371    ;	push	bc
                           A   372    		
                           A   373    
0004F1                     A   374    iprintlp:
                           A   375    
0004F1 5B2A B2 06 0B       A   376    	ld.lil	hl,(counter+BASE)
0004F6 5BED5B B6 06 0B     A   377    	ld.lil	de,(rows+BASE)
0004FC 5B19                A   378    	add.lil	hl,de
                           A   379    ;	ld.lil	de,16
                           A   380    ;	add.lil	hl,de
                           A   381    ;	ld.lil	(counter+BASE),hl
0004FE C5                  A   382    	push	bc
0004FF CD 89 06            A   383    	call	Print_Hex24
000502 C1                  A   384    	pop		bc
000503 C5                  A   385    	push	bc
                           A   386    ;	ld		d,0		;ignore 2nd 100h block offs
000504                     A   387    ihexloop:
000504 3E3A                A   388    	ld		a,':'
000506 C5                  A   389    	push	bc
000507 D7                  A   390    	rst		10h
000508 C1                  A   391    	pop		bc
000509 21 C4 06            A   392    	ld		hl,buffer
00050C 19                  A   393    	add		hl,de
                           A   394    ;	ld		c,0
00050D                     A   395    ihexlp1:
00050D 79                  A   396    	ld		a,c
00050E E603                A   397    	and		3
000510 20 05               A   398    	jr		nz,$f
000512 3E20                A   399    	ld		a,' '
                           A   400    ;	push	hl
000514 C5                  A   401    	push	bc
000515 D7                  A   402    	rst		10h
000516 C1                  A   403    	pop		bc
                           A   404    ;	pop		hl
000517                     A   405    $$:
                           A   406    
000517 78                  A   407    	ld		a,b
000518 B7                  A   408    	or		a
000519 28 0D               A   409    	jr		z,ihexlp2
                           A   410    ;	ld		a,b
00051B B9                  A   411    	cp		c
00051C 28 02               A   412    	jr		z,$F
00051E 30 08               A   413    	jr		nc,ihexlp2
000520                     A   414    $$:
000520 3E20                A   415    	ld		a,' '
000522 C5                  A   416    	push	bc
000523 D7                  A   417    	rst		10h
000524 D7                  A   418    	rst		10h
000525 C1                  A   419    	pop		bc
000526 18 07               A   420    	jr		ihexlp3
000528                     A   421    ihexlp2:
000528 7E                  A   422    	ld		a,(hl)
                           A   423    
                           A   424    ;	push	hl
000529 C5                  A   425    	push	bc
00052A CD 9E 06            A   426    	call	Print_Hex8
00052D C1                  A   427    	pop		bc
                           A   428    ;	pop		hl
00052E 23                  A   429    	inc		hl
00052F                     A   430    ihexlp3:
00052F 0C                  A   431    	inc		c
000530 79                  A   432    	ld		a,c
000531 E60F                A   433    	and		15
000533 CA 38 05            A   434    	jp		z,ihexend
000536 18 D5               A   435    	jr		ihexlp1
                           A   436    
000538                     A   437    ihexend:
000538 3E20                A   438    	ld		a,' '
00053A D7                  A   439    	rst		10h
00053B C1                  A   440    	pop		bc		;recover c register.
00053C                     A   441    iasciiloop:
00053C 3E7C                A   442    	ld		a,'|'
00053E C5                  A   443    	push	bc
00053F D7                  A   444    	rst		10h
000540 C1                  A   445    	pop		bc
000541 21 C4 06            A   446    	ld		hl,buffer
000544 19                  A   447    	add		hl,de
                           A   448    ;	ld		c,0
000545                     A   449    iasciilp1:
000545 78                  A   450    	ld		a,b
000546 B7                  A   451    	or		a
000547 28 09               A   452    	jr		z,iasciilp2
                           A   453    ;	ld		a,b
000549 B9                  A   454    	cp		c
00054A 28 02               A   455    	jr		z,$F
00054C 30 04               A   456    	jr		nc,iasciilp2
00054E                     A   457    $$:
00054E 3E20                A   458    	ld		a,' '
000550 18 01               A   459    	jr		iasciilp3
000552                     A   460    iasciilp2:
000552 7E                  A   461    	ld		a,(hl)
                           A   462    ;	call	unprintable
000553                     A   463    iasciilp3:
000553 E5                  A   464    	push	hl
000554 C5                  A   465    	push	bc
000555 F5                  A   466    	push	af
000556 3E1B                A   467    	ld		a,27
000558 D7                  A   468    	rst		10h
000559 F1                  A   469    	pop		af
00055A D7                  A   470    	rst		10h
00055B C1                  A   471    	pop		bc
00055C E1                  A   472    	pop		hl
00055D 23                  A   473    	inc		hl
00055E 0C                  A   474    	inc		c
00055F 79                  A   475    	ld		a,c
000560 E60F                A   476    	and		15
000562 20 E1               A   477    	jr		nz,iasciilp1	;until you get to t
                           A   478    
000564                     A   479    iasciiend:
000564 CD 58 02            A   480    	call	inline_print
000567 7C0D0A00            A   481    	db		'|',CR,LF,0
00056B 5B2A B6 06 0B       A   482    	ld.lil	hl,(rows+BASE)
000570 5B111000 00         A   483    	ld.lil	de,16
000575 5B19                A   484    	add.lil	hl,de
000577 5B22 B6 06 0B       A   485    	ld.lil	(rows+BASE),hl
00057C 7D                  A   486    	ld		a,l
00057D B7                  A   487    	or		a
00057E C2 F1 04            A   488    	jp		nz,iprintlp
000581 C9                  A   489    	ret
                           A   490    
000582                     A   491    go_down:
000582 5B2A B2 06 0B       A   492    	ld.lil	hl,(counter+BASE)
000587 5B111000 00         A   493    	ld.lil	de,16
00058C 5B19                A   494    	add.lil	hl,de
00058E 18 07               A   495    	jr		next_b2
000590                     A   496    next_byte:
000590 5B2A B2 06 0B       A   497    	ld.lil	hl,(counter+BASE)
000595 5B23                A   498    	inc.lil	hl
000597                     A   499    next_b2:
000597 1E00                A   500    	ld		e,0
000599 18 0C               A   501    	jr		seekit
00059B                     A   502    next_sector:
00059B 5B2A B2 06 0B       A   503    	ld.lil	hl,(counter+BASE)
0005A0 5B110001 00         A   504    	ld.lil	de,256
0005A5 5B19                A   505    	add.lil	hl,de
0005A7                     A   506    seekit:
0005A7 5B22 B2 06 0B       A   507    	ld.lil	(counter+BASE),hl
0005AC 3A B1 06            A   508    	ld		a,(in_handle)
0005AF 4F                  A   509    	ld		c,a
                           A   510    	MOSCALL	mos_flseek
0005B4 C3 94 03            A   511    	jp		main_loop
                           A   512    
0005B7                     A   513    prev_sector:
0005B7 5B2A B2 06 0B       A   514    	ld.lil	hl,(counter+BASE)
0005BC 5B110001 00         A   515    	ld.lil	de,256
0005C1 B7                  A   516    	or		a
0005C2 5BED52              A   517    	sbc.lil	hl,de
0005C5 30 E0               A   518    	jr		nc,seekit
0005C7 5B210000 00         A   519    	ld.lil	hl,0
0005CC 18 D9               A   520    	jr		seekit
                           A   521    
0005CE                     A   522    prev_byte:
0005CE 5B2A B2 06 0B       A   523    	ld.lil	hl,(counter+BASE)
0005D3 5B110100 00         A   524    	ld.lil	de,1
0005D8                     A   525    prev_b2:
0005D8 B7                  A   526    	or		a
0005D9 5BED52              A   527    	sbc.lil	hl,de
0005DC 1E00                A   528    	ld		e,0
0005DE 30 C7               A   529    	jr		nc,seekit
0005E0 5B210000 00         A   530    	ld.lil	hl,0
0005E5 18 C0               A   531    	jr		seekit
                           A   532    
0005E7                     A   533    go_up:
0005E7 5B2A B2 06 0B       A   534    	ld.lil	hl,(counter+BASE)
0005EC 5B111000 00         A   535    	ld.lil	de,16
0005F1 18 E5               A   536    	jr		prev_b2
                           A   537    
                           A   538    ;goto routine
0005F3                     A   539    goto:
                           A   540    ;position cursor + prompt
0005F3 CD 58 02            A   541    	call	inline_print
0005F6 1F010947 6F20746F   A   542    	db		31,1,9,'Go to [hex]?',0
0005FE 205B6865 785D3F00 
                           A   543    ;0x09: mos_editline - Invoke the line editor
                           A   544    ;HL(U): Address of the buffer
                           A   545    ;BC(U): Buffer length
                           A   546    ;E: 0 to not clear buffer, 1 to clear
                           A   547    ;Returns:
                           A   548    ;A: Key that was used to exit the input loop (C
000606 21 BA 06            A   549    	ld		hl,input_buf
000609 010700              A   550    	ld		bc,7
00060C 1E01                A   551    	ld		e,1
                           A   552    	MOSCALL	mos_editline
000612 FE1B                A   553    	cp		27
000614 28 56               A   554    	jr		z,goto_abort
000616 11 BA 06            A   555    	ld		de,input_buf
000619 5B210000 00         A   556    	ld.lil	hl,0
00061E 0606                A   557    	ld		b,6		;max char count
000620                     A   558    goto_loop:
000620 1A                  A   559    	ld		a,(de)
000621 B7                  A   560    	or		a
000622 CA A7 05            A   561    	jp		z,seekit
000625 D630                A   562    	sub		'0'	;30h
000627 38 23               A   563    	jr		c,goto_invalid
000629 FE0A                A   564    	cp		9+1
00062B 38 12               A   565    	jr		c,goto_nextchar
00062D D610                A   566    	sub		10h
00062F 38 1B               A   567    	jr		c,goto_invalid
000631 E61F                A   568    	and		1fh
000633 28 17               A   569    	jr		z,goto_invalid
000635 FE07                A   570    	cp		7
000637 30 13               A   571    	jr		nc,goto_invalid
000639 C609                A   572    	add		9
00063B FE10                A   573    	cp		16
00063D 30 0D               A   574    	jr		nc,goto_invalid	;fix it later
                           A   575    
00063F                     A   576    goto_nextchar
00063F 5B29                A   577    	add.lil	hl,hl
000641 5B29                A   578    	add.lil	hl,hl
000643 5B29                A   579    	add.lil	hl,hl
000645 5B29                A   580    	add.lil	hl,hl
000647 B5                  A   581    	or		l
000648 6F                  A   582    	ld	l,a
000649 13                  A   583    	inc		de
00064A 10 D4               A   584    	djnz	goto_loop
                           A   585    
00064C                     A   586    goto_invalid:
00064C CD 58 02            A   587    	call	inline_print
00064F 1F010911 89202049   A   588    	db		31,1,9,17,128+8+1,'  Invalid  ',17,
000657 6E76616C 69642020 
00065F 11802020 20202020 
000667 2000 
000669 C3 8C 04            A   589    	jp		key_invalid
                           A   590    
00066C                     A   591    goto_abort:
00066C CD 58 02            A   592    	call	inline_print
00066F 1F010920 20202020   A   593    	db		31,1,9,'                  ',0
000677 20202020 20202020 
00067F 20202020 2000 
000685 C3 8C 04            A   594    	jp		key_invalid
                           A   595    
                           A   596    ;
                           A   597    ; data storage . . .
                           A   598    ;	
000688                     A   599    stringlength:
000688 04                  A   600    	db	4	;default of 4 characters
                           A   601    ; uninitialized storage/BSS but can't use that 
                           A   602    ;
                           A   603    ; RAM
                           A   604    ; 
                           A   605    			DEFINE	LORAM, SPACE = ROM
                           A   606    ;			ORDER	__VECTORS, CODE, LORAM
                           A   607    			SEGMENT LORAM
                           A   608    		
                           A   609    ;			SEGMENT	BSS
                           A   610    ;			SEGMENT CODE
                           A   611    
0006B1                     A   612    in_handle:	DS	1	;Only needs 1 byte handle
0006B2                     A   613    counter:	DS	4	; current address counter f
0006B6                     A   614    rows:		DS	4
0006BA                     A   615    input_buf:	DS	8	;up to 6 characters?
0006C2                     A   616    upcount:	DS	2	;upper 2 bytes for file loc
0006C4                     A   617    buffer:		DS	512	;Space to buffer incoming f
0008C4                     A   618    curbyte:	DS	1	;current byte in the buffer
0008C5                     A   619    keycount:	DS	1	;current key count
                           A   620    	end


Errors: 0
Warnings: 0
Lines Assembled: 970
